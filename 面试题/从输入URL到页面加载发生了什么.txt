总体来说分为以下几个过程
1、DNS解析
2、TCP连接
3、发送HTTP请求
4、服务器处理并返回HTTP报文
5、浏览器解析渲染页面
6、连接结束


1、DNS解析
DNS解析的过程就是寻找那台机器上有你需要资源的过程。
www.google.com 查找过程
www.google.com 的解析过程
.---> .com ---> google.com ---> www.google.com
第一次查找
客户端 --> 本地服务器查找 --->(没有) 根服务器查找 --->(没有) .com服务器 查找--->(没有) google.com域名服务器查找 ---> 本地服务器（DNS缓存）--> 客户端

DNS缓存中读取
客户端 ---> 本地服务器 -->读取DNS缓存 ---> 客户端

DNS优化
1) DNS缓存 
DNS存在着多级缓存，从浏览器的距离排序的话，有以下几种：
浏览器缓存、系统缓存、路由器缓存、IPS服务器缓存、根域名服务器缓存、顶级域名服务器缓存、主域名服务器缓存
2) DNS负载均衡
DNS可以返回一个合适的机器的IP给用户，例如可以根据每台机器的负载量，该机器用户地理位置的距离等等，这种过程就是DNS负载均衡，又叫做DNS重定向

2、TCP连接
HTTP协议是使用TCP作为其传输层的，当TCP出现瓶颈时，HTTP也会受到影响
HTTP报文是包裹在TCP报文中发送的，服务器端收到TCP报文时会解包提取HTTP报文。但是这个过程中存在一定的风险，HTTP报文是明文，如果中间被截取的话有一些信息会有泄漏的风险。
HTTPS协议的本质就是HTTP+SSL(or TLS)。在HTTP报文进入TCP报文之前，先使用 SSL对HTTP报文加密

3、发送HTTP请求
可认为前端发起请求
发送HTTP请求的过程就是构建HTTP请求报文并通过TCP协议发送到服务器指定端口
(HTTP 协议80/8080，HTTPS 协议443)。
HTTP请求报文是由三部分组成：请求行、请求报头、请求正文
1)请求行：Method Request-URL HTTP-VersionCRLF
eg:GET index.html HTTP/1.1
常用的方法有：GET、POST、PUT、DELETE、OPTIONS、HEAD

2)请求报头
请求报头允许客户端向服务器传递请求的附加信息和客户端自身的信息
常见的请求报头有：Accept、Accept-Charset、Accept-Encoding、Accept-Language、Content-Type、Authorization、Cookie、User-Agent

3)请求正文
当使用POST、PUT等方法时，通常需要客户端向服务器传递数据。这些数据就存储在请求正文中。

4、服务器处理请求并返回HTTP报文
可认为后端接受请求，处理并返回数据
后端从在固定的端口接收到TCP报文开始，它会对TCP连接进行处理，对HTTP协议进行解析，并按照报文格式进一步封装成HTTP Request对象，供上层使用
HTTP响应报文也是由三部分组成：状态码、响应报头、响应报文

1) 状态码
 1xx:指示信息-表示请求已接收，继续处理
 2xx:成功-表示请求已被成功接收、理解、接受
 3xx:重定向-要完成请求必须进行更进一步的操作
 4xx:客户端错误-请求有语法错误或请求无法实现
 5xx:服务器端错误-服务器未能实现合法的请求
2) 响应报头
常见的响应报头字段有：Server，Connection...

3) 响应报文
服务器返回给浏览器的文本信息，通常HTML、CSS、JS、图片等文件放在这里

5、浏览器解析渲染页面
浏览器是一个边解析边渲染的过程。首先浏览器解析HTML文件构建DOM树，然后解析CSS文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂，涉及到两个概念: reflow(回流)和repain(重绘)。

Web优化
答案就是能不从网络中加载的资源就不从网络中加载，当我们合理使用缓存，将资源放在浏览器端，这是最快的方式。如果资源必须从网络中加载，则要考虑缩短连接时间，即DNS优化部分;减少响应内容大小，即对内容进行压缩。另一方面，如果加载的资源数比较少的话，也可以快速的响应用户。当资源到达浏览器之后，浏览器开始进行解析渲染，浏览器中最耗时的部分就是reflow，所以围绕这一部分就是考虑如何减少reflow的次数。